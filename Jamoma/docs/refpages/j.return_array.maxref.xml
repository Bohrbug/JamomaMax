<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>
<!--Data marked TEXT_HERE, INLET_TYPE, OUTLET_TYPE, ARG_NAME and ARG_TYPE need to be filled in-->
<c74object name="j.message_array" module="" category="Jamoma">
	<digest>
		Declare an array of output nodes in a Jamoma model
	</digest>
	<description>
		j.return_array declares an array of output nodes in a Jamoma model. It wraps j.return features enabling models to generate control datas that can be communicated to other the Jamoma nodes. The returns value will not be stored as part of the state of the model.
	</description>
	<discussion><o>j.return</o> is an output node that enables a model to return values. The return value can be updated immediately, or by easing over time. Common types of returns, such as frequency, can be controlled using several different units (e.g. Hz, midinote or midicent) interchangeably.<br/>
    <br/>
    User interfaces can bind to returns remotely. Mappings enable one return to dynamically control the value of another node.<br/>
    <br/>
    Additionally the return enables inter-application communication. The return node is provided with a unique global OSC address, and returns can be declared on the network in order for other applications, such as i-score, to inspect and control models.
  </discussion>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Jamoma
		</metadata>
		<metadata name="tag">
			mvc
		</metadata>
		<metadata name="tag">
			Jamoma
		</metadata>
		<metadata name="tag">
			modular
		</metadata>
		<metadata name="tag">
			array
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" type="any">
			<digest>
				Value of the selected instance(s)
			</digest>
			<description>
				Value of the selected instance(s)
			</description>
		</inlet>
		<inlet id="1" type="int">
			<digest>
				Index
			</digest>
			<description>
				Index of the instance to send value to. (1 to max number of instance. * will send value to all instances)
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" type="any">
			<digest>
				Selected instance return's value
			</digest>
			<description>
				Return's value. When <at>format</at> attribute is set to <i>single</i> (default) output will be the selected instance return's value. When <at>format</at> is set to <i>array</i>, output will be a list of all return' value.
			</description>
		</outlet>
		<outlet id="1" type="int">
			<digest>
				Last updated instance number
			</digest>
			<description>
				Last updated instance number			
			</description>
		</outlet>
		<outlet id="2" type="none">
			<digest>
				Dumpout
			</digest>
			<description>
				Dumpout
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg id="0" name="name" type="symbol" optional="0">
			<digest>
				Output nodes array name
			</digest>
			<description>
				Output nodes array name defined using a bracket-based syntaxe: buffer.[2]/read/done
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist/>
			<digest>
				Outputs last returned value
			</digest>
			<description>
				Outputs last returned value
			</description>
		</method>
		<method name="anything">
			<arglist>
				<arg name="value" type="list" optional="0"/>
			</arglist>
			<digest>
				Outputs last returned value.
			</digest>
			<description>
				Outputs last returned value.
			</description>
		</method>
		<method name="+">
			<arglist/>
			<digest>
				Increment the selected instance last returned value by the amount defined by the <at>@stepsize</at> attribute
			</digest>
			<description>
				Increment the selected instance last returned value by the amount defined by the <at>@stepsize</at> attribute
			</description>
		</method>
		<method name="-">
			<digest>
				Decrement the selected instance last returned value by the amount defined by the <at>@stepsize</at> attribute
			</digest>
			<description>
				Decrement the selected instance last returned value by the amount defined by the <at>@stepsize</at> attribute
			</description>
		</method>
		<method name="address">
			<arglist>
				<arg name="name" type="symbol" optional="0"/>
			</arglist>
			<digest>
				Define an array of returns in the namespace. Ex: 'address buffer.[5]/read/done'
			</digest>
			<description>
				The address message followed by an osc name containing a number of instances placed in bracket declares an array of returns in the namespace. Ex: 'address buffer.[5]/read/done'
			</description>
		</method>
		<method name="array">
			<arglist>
				<arg name="value" type="list" optional="0"/>
			</arglist>
			<digest>
				Dispatch a list of values to instances of the returns
			</digest>
			<description>
				Dispatch a list of values to instances of the returns
			</description>
		</method>
		<method name="array/select">
			<arglist>
				<arg name="instance" type="int" optional="0"/>
			</arglist>
			<digest>
				This message select which instance to address
			</digest>
			<description>
				This message select which j.return_array's instance to address
			</description>
		</method>
		<method name="array/resize">
			<arglist>
				<arg name="length" type="int" optional="0"/>
			</arglist>
			<digest>
				Change the number of instances
			</digest>
			<description>
				Change the number of instances
			</description>
		</method>
		<method name="dec">
			<arglist/>
			<digest>
				Decrement the value by the amount defined by the <at>stepsize</at> attribute
			</digest>
			<description>
				Decrement the selected instance last returned value by the amount defined by the <at>@stepsize</at> attribute
			</description>
		</method>
		<method name="dump">
			<arglist/>
			<digest>
				Dump
			</digest>
			<description>
				Dump all attributes values
			</description>
		</method>
		<method name="inc">
			<arglist/>
			<digest>
				Increment the value by the amount defined by the <at>stepsize</at> attribute
			</digest>
			<description>
				Increment the selected instance last returned value by the amount defined by the <at>@stepsize</at> attribute
			</description>
		</method>
		<method name="init">
			<arglist/>
			<digest>
				Reset the selected j.return instance to its default value
			</digest>
			<description>
				Reset the selected j.return instance to its default value
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="active" get="1" set="1" type="int" size="1">
			<digest>
				Enable or disable returns instances
			</digest>
			<description>
				Enable or disable returns instances
			</description>
			<attributelist>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff"/>
			</attributelist>
		</attribute>
		<attribute name="clipmode" get="1" set="1" type="symbol" size="1">
			<digest>
				Set how values exceeding range will be clipped
			</digest>
			<description>
				Set how values exceeding range will be clipped. Available clipmodes are <m>none</m>, <m>low</m>, <m>high</m>, <m>both</m>, <m>wrap</m> and <m>fold</m>.
			</description>
		</attribute>
		<attribute name="dataspace" get="1" set="1" type="symbol" size="1">
			<digest>
				Dataspace used by the returns
			</digest>
			<description>
				Dataspace used by the returns. This enables returned values to be updated using several alternative units interchangeably, such as <m>degree</m> and <m>radian</m> for the <m>angle</m> dataspace. Available dataspaces are <m>angle</m>, <m>color</m>, <m>distance</m>, <m>gain</m>, <m>none</m>, <m>orientation</m>, <m>position</m>, <m>speed</m>, <m>temperature</m> and <m>time</m>. The default dataspace is <m>none</m>.
			</description>
		</attribute>
		<attribute name="default" get="1" set="1" type="int" size="1">
			<digest>
				Defaults value
			</digest>
			<description>
				Defaults value of <o>j.return_array</o>. 
			</description>
		</attribute>
		<attribute name="description" get="1" set="1" type="symbol" size="1">
			<digest>
				Output node description
			</digest>
			<description>
				Description of what this output node returns. The description is used when auto-documenting models.
			</description>
		</attribute>
		<attribute name="format" get="1" set="1" type="symbol" size="1">
			<digest>
				Format of the values output: single or array
			</digest>
			<description>
				Format of the output values. When set to <i>single</i> (default), output will be the selected instance returned value. When set to <i>array</i>, output will be a list of all instances returned value.
			</description>
			<attributelist>
				<attribute name="enumvals" get="1" set="1" type="atom" size="2">
					<enumlist>
						<enum name="single">
							<digest>
								Output the selected instance returns value
							</digest>
							<description>
								Output the selected instance returns value
							</description>
						</enum>
						<enum name="array">
							<digest>
								Output the all instances returns value as a list
							</digest>
							<description>
								Output the all instances returns value as a list
							</description>
						</enum>
					</enumlist>
				</attribute>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum"/>
			</attributelist>
		</attribute>
		<!-- <attribute name="priority" get="1" set="1" type="int" size="1">
			<digest>
				Set priority
			</digest>
			<description>
				Priority controls in what order several <o>j.parameter</o> obejcts within the same model will initialise and update in response to presets and cues.
			</description>
		</attribute> -->
		<attribute name="ramp/drive" get="1" set="1" type="symbol" size="1">
			<digest>
				Set the scheduler driving the ramp
			</digest>
			<description>
				Set the scheduler driving the ramp: <m>none</m> - no ramping permitted, <m>max</m> - using the Max scheduler, and <m>system</m> - using the system clock. In Max it is recommended to use <m>max</m> rather than <m>system</m>.
			</description>
		</attribute>
		<attribute name="ramp/function" get="1" set="1" type="symbol" size="1">
			<digest>
				Function to be used for ramping
			</digest>
			<description>
				Sets what easing function to use for ramping. A wide range of easing functions as well as windowing functions are available. Please refer to the help file for further details.
			</description>
		</attribute>
		<attribute name="ramp/function/parameters" get="1" set="0" type="atom" size="1">
			<digest>
				Get list of configurable parameters for the current ramp function
			</digest>
			<description>
				Get list of configurable parameters for the current ramp function. Certain ramp functions as specified by the <m>@ramp/function</m> attribute have additional configurable parameters that can be changed dynamically to modify the shape of the ramping curve. The message <m>ramp/function/parameters</m> cause <o>j.parameter</o> to output a list of all such parameters from the rightmost outlet, prepended by the symbol <m>ramp/function/parameters</m>. Refer to the help file for <o>j.ramp</o> for an overview of what functions have additional configurable parameters.
			</description>
		</attribute>
		<attribute name="range" get="1" set="1" type="atom" size="1">
			<digest>
				The range of values
			</digest>
			<description>
				The expected range of values for this return. Depending on <m>@clipmode</m> this might be a recommended or definitive range.
			</description>
		</attribute>
		<attribute name="repetitions/filter" get="1" set="1" type="int" size="1">
			<digest>
				Filtering of value repetitions
			</digest>
			<description>
				Set whether to filter out value repetitions (<m>1</m>) or not (<m>0</m>).
			</description>
		</attribute>
		<attribute name="stepsize" get="1" set="1" type="int" size="1">
			<digest>
				Step size when incrementing or decrementing the returned value
      </digest>
			<description>
				Stepsize used when incrementing or decrementing the returned value using one of the messages <m>+</m>, <m>-</m>, <m>inc</m> or <m>dec</m>.
			</description>
		</attribute>
		<attribute name="tags" get="1" set="1" type="atom" size="1">
			<digest>
				Tags associated with the returns
			</digest>
			<description>
				Tags associated with the returns. This helps documenting the returns, and is also useful when restricting namespace searches using <o>j.namespace</o>.
			</description>
		</attribute>
		<attribute name="type" get="1" set="1" type="symbol" size="1">
			<digest>
				Datatype of the returns
			</digest>
			<description>
				Datatype of the returns (decimal, integer, boolean, string, array, generic)
			</description>
			<attributelist>
				<attribute name="enumvals" get="1" set="1" type="atom" size="7">
					<enumlist>
						<enum name="none">
							<digest>
						Define a bang value
					</digest>
							<description>
						Returned value will be a bang
					</description>
						</enum>
						<enum name="generic">
							<digest>
						Define a value of any kind
					</digest>
							<description>
						Returned value will be of any kind (including lists combining integers, decimals and symbols)
					</description>
						</enum>
						<enum name="boolean">
							<digest>
						Define a 0 or 1 value
					</digest>
							<description>
						Returned value will be either 0 or 1
					</description>
						</enum>
						<enum name="integer">
							<digest>
						Define an integer (<i>int</i>) value
					</digest>
							<description>
Returned value will be an integer number (<i>int</i>). Other values get converted to integer					</description>
						</enum>
						<enum name="decimal">
							<digest>
						Define a decimal (<i>float</i>) value
					</digest>
							<description>
						Returned value will be a decimal number (<i>float</i>)
					</description>
						</enum>
						<enum name="array">
							<digest>
						Define an array of decimal (<i>float</i>) value
					</digest>
							<description>
						Returned value will be a list of decimal numbers (<i>float</i>)
					</description>
						</enum>
						<enum name="string">
							<digest>
						Define a string (<i>symbol</i>) value
					</digest>
							<description>
						Returned value will be a string (<i>symbol</i>)
					</description>
						</enum>
					</enumlist>
				</attribute>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum"/>
			</attributelist>
		</attribute>
		<attribute name="value" get="1" set="1" type="int" size="1">
			<digest>
				Last returned value
			</digest>
			<description>
				Last returned value
			</description>
		</attribute>
		<!-- <attribute name="service" get="1" set="1" type="symbol" size="1">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</attribute> -->
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example caption="" img=""/>
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="j.return"/>
		<seealso name="j.parameter_array"/>
		<seealso name="j.message_array"/>
	</seealsolist>
</c74object>

<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--Data marked TEXT_HERE, INLET_TYPE, OUTLET_TYPE, ARG_NAME and ARG_TYPE need to be filled in-->
<c74object name="j.ui" module="" category="Jamoma">
	<digest>
		A GUI widget providing access to some model embedded features
	</digest>
	<description>
		j.ui brings a nice GUI widget for your model's views and provides some accesses to preset management, model in/out features.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Jamoma
		</metadata>
		<metadata name="tag">
			Jamoma
		</metadata>
		<metadata name="tag">
			mvc
		</metadata>
		<metadata name="tag">
			gui
		</metadata>
		<metadata name="tag">
			widget
		</metadata>
		<metadata name="tag">
			view
		</metadata>
	</metadatalist>


	<!--INLETS-->
	<!--OUTLETS-->
	<!--ARGUMENTS-->
	<!-- <objarglist>
		<objarg id="0" name="OBJARG_NAME" type="OBJARG_TYPE" optional="0">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</objarg>
	</objarglist> -->
	<!--MESSAGES-->
	<methodlist>
		<method name="(mouse)">
			<digest>
				Access embedded features provided by the model patcher the view currently binds to
			</digest>
			<description>
				Access embedded features provided by the model patcher the view is binding to. <br/><br/>
				<ul>
					<li><img src="images/jui-address.png"/><i>model address</i>: clicking the model address the view currently binds to brings a dropdown menu listing all parameters, messages and returns registered under the model address node</li>
					<li><img src="images/jui-dropdown.png"/><i>menu widget</i>: clicking the menu arrow brings a dropdown menu giving access to preset management commands and other utilities:<ul>
					<li><i>Open Model Reference Page</i>: selecting item sends the <m>model:reference/open</m> message</li>
					<li><i>Open Model Help Patch</i>: selecting item sends the <m>model:help/open</m> message</li>
					<li><i>Open Model Internal</i>: selecting item sends the <m>model:internal/open</m> message</li>
					<li><i>Edit Current State</i>: selecting item sends the <m>preset:edit</m> message</li><br/>
					<li><i>Load Presets File</i>: selecting item sends the <m>preset:read</m> message</li>
					<li><i>Save Presets File</i>: selecting item sends the <m>preset:write/again</m> message</li>
					<li><i>Save Presets File As</i>: selecting item sends the <m>preset:write</m> message</li>
					<li><i>Edit Presets File</i>: selecting item sends the <m>preset:edit</m> message</li>
					<li><i>Create New Preset</i>: selecting item sends the <m>preset:new</m> message</li>
					<li><i>Update Current Preset</i>: selecting item sends the <m>preset:update</m> message</li>
					<li><i>Delete Preset</i>: selecting item sends the <m>preset:delete</m> message</li>
					<br/>
					<li><i>(preset name)</i>: selecting a preset name sends the <m>preset:recall (preset name)</m> message</li>
				</ul>
			</li>
			</ul>
				Depending on the type of your model (audio or control), j.ui will automatically display the widgets corresponding to the available internal parameters. Models including a combination of j.in~ and/or j.out~ provide in j.ui (from left to right):
				<ul>
					<li><img src="images/jui-gain.png"/><i>audio gain widget</i>: dragging the knob sets the model's internal <at>audio/gain</at> parameter</li>
					<li><img src="images/jui-mix.png"/><i>mix widget</i>: dragging the knob sets the model's internal <at>audio/mix</at> (wet/dry) parameter</li>
					<li><img src="images/jui-mute.png"/><i>mute widget</i>: clicking the button toggles on or off the model's internal <at>audio/mute</at> parameter (default off)</li>
					<li><img src="images/jui-bypass.png"/><i>bypass widget</i>: clicking the button toggles on or off the model's internal <at>audio/bypass</at> parameter (default off)</li>
				</ul><br/>Models including a combination of j.in and/or j.out provide in j.ui (from left to right):
				<ul>
					<li><img src="images/jui-bypass.png"/><i>bypass widget</i>: clicking the button toggles on or off the model's internal <at>data/bypass</at> parameter (default off)</li>
					<li><img src="images/jui-active.png"/><i>active widget</i>: clicking the button toggles on or off the model's internal <at>data/active</at> parameter (default on)</li>
				</ul>
				j.ui also provides an <i>+</i> button when a secondary panel view is built in your view. 
				<ul><li><img src="images/jui-plus.png"/><i>plus widget</i>: clicking the button opens panel window</li>
			</ul>
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="bgcolor" get="1" set="1" type="float" size="4">
			<digest>
				Background color
			</digest>
			<description>
				Background color. Note that j.ui is not yet compatible with Max 7 styling features
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="atom" size="1" value="Color" />
				<attribute name="defaultname" get="1" set="1" type="float" size="4" value="0.93 0.93 0.93 1." />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="bordercolor" get="1" set="1" type="float" size="4">
			<digest>
				Border color
			</digest>
			<description>
				Border color. Note that j.ui is not yet compatible with Max 7 styling features
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="atom" size="1" value="Color" />
				<attribute name="defaultname" get="1" set="1" type="float" size="4" value="0.6 0.6 0.6 1." />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="headercolor" get="1" set="1" type="float" size="4">
			<digest>
				Header color
			</digest>
			<description>
				Header color. Note that j.ui is not yet compatible with Max 7 styling features
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="atom" size="1" value="Color" />
				<attribute name="defaultname" get="1" set="1" type="float" size="4" value="0.82 0.82 0.82 1." />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
		<attribute name="textcolor" get="1" set="1" type="float" size="4">
			<digest>
				Text color
			</digest>
			<description>
				Text color. Note that j.ui is not yet compatible with Max 7 styling features
			</description>
			<attributelist>
				<attribute name="category" get="1" set="1" type="atom" size="1" value="Color" />
				<attribute name="defaultname" get="1" set="1" type="float" size="4" value="0. 0. 0. 1." />
				<attribute name="paint" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="save" get="1" set="1" type="int" size="1" value="1" />
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="rgba" />
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example caption="" img="" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="j.view"/>
		<seealso name="j.model"/>
		<seealso name="makeamodelview" module="jamoma" type="tutorial">test text</seealso>
	</seealsolist>
</c74object>

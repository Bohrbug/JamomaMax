<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>
<c74object name="j.namespace" module="" category="Jamoma">
	<digest>
		Filter Jamoma namespace
	</digest>
	<description>
		j.namespace is a utility to perform advanced Jamoma namespace queries and filtering. It is useful to manage and navigate through the various nodes addresses of your Jamoma Max patch, for example when building dynamic GUI interface
	</description>
	<metadatalist>
		<metadata name="author">
			Jamoma
		</metadata>
		<metadata name="tag">
			Jamoma
		</metadata>
		<metadata name="tag">
			query
		</metadata>
		<metadata name="tag">
			namespace
		</metadata>
		<metadata name="tag">
			interface
		</metadata>
		<metadata name="tag">
			dynamic
		</metadata>
	</metadatalist>
	<!-- <inletlist>
		<inlet id="0" type="symbol">
			<digest>
				input
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
			<digest>
				input
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
	</inletlist> -->
	<outletlist>
		<outlet id="0" type="list">
			<digest>
				Matching addresses
			</digest>
			<description><o>j.namespace</o> leftmost outlet outputs the nodes addresses matching the filter appied on the namespace selection. Addresses may be output as a single list or as preformatted messages for some Max GUI objects, as defined by the format <at>attribute</at>
			</description>
		</outlet>
		<outlet id="1" type="int">
			<digest>
				Number of output addresses
			</digest>
			<description>
				j.namespace middle outlet outputs the size of the filter result that is, the number of matching nodes addresses
			</description>
		</outlet>
		<outlet id="2" type="any">
			<digest>
				dumpout
			</digest>
			<description>
				Dump out values of the various j.namespace attribute
			</description>
		</outlet>
	</outletlist>
	<objarglist>
		<objarg id="0" name="name" type="OBJARG_TYPE" optional="1">
			<digest>
				Namespace selection name
			</digest>
			<description>
				Optional argument sets a name for this namespace selection so it can be referenced from other Jamoma object (ie. <o>j.cue</o>)
			</description>
		</objarg>
	</objarglist>
	<methodlist>
		<method name="bang">
			<arglist/>
			<digest>
				Trigger namespace filtering
			</digest>
			<description>
				A bang at <o>j.namespace</o> leftmost inlet triggers namespace filtering
			</description>
		</method>
		<method name="anything">
			<arglist>
				<arg name="address" type="symbol" optional="0"/>
			</arglist>
			<digest>
				Trigger filtering from this address
			</digest>
			<description>
				A symbol at j.namespace inlet triggers namespace filtering from the specified address (sets the <at>address</at> attribute and trigger filtering)
			</description>
		</method>
		<method name="dump">
			<arglist/>
			<digest>
				Dumpout
			</digest>
			<description>
				The <m>dump</m> message outputs <o>j.namespace</o> attributes value at it rightmost outlet
			</description>
		</method>
		<method name="filter/info">
			<arglist>
				<arg name="filter name" type="symbol" optional="0"/>
			</arglist>
			<digest>
				Output named filter settings
			</digest>
			<description>
				The <m>filter/info</m> message followed by a filter name (<i>symbol</i>) outputs the filter pattern out of j.namespace rightmost outlet
			</description>
		</method>
		<method name="filter/remove">
			<arglist>
				<arg name="filter name" type="symbol" optional="0"/>
			</arglist>
			<digest>
				Remove filter
			</digest>
			<description>
				The <m>filter/remove</m> message followed by a filter name (<i>symbol</i>) remove the filter pattern from the list of active filters
			</description>
		</method>
		<method name="explore">
			<arglist/>
			<digest>
				Trigger namespace filtering
			</digest>
			<description>
				The <m>explore</m> message triggers namespace filtering
			</description>
		</method>
		<method name="filter/set">
			<arglist>
				<arg name="filter rule" type="list" optional="0"/>
			</arglist>
			<digest>
				Filter rule
			</digest>
			<description>
				The <m>filter/set</m> message followed by a list of item and value pairs set criteria used to filter the namespace. Available items and values are:
				<ul><li><m>object</m> (<i>object_type</i>): the type of object to apply filter to. Available values are:<ul><li>Container (a model or a view)</li><li>Data (a parameter, message or return)</li><li>Viewer (any j.remote)</li><li>none (any empty node)</li></ul>
				<br/>ie. <m>'object Data'</m></li><li><m>attribute</m> (<i>attribute_name</i>): the name of the object attribute to test. This can be any of the Jamoma external attributes. ie. <m>'attribute dataspace'</m></li><li>value (<i>value</i>): the value of the attribute to test. ie. <m>value position'</m></li><li>part (<i>symbol</i>): a symbol part of the address</li><li>parent (<i>parent node</i>): name of the parent node. ie. <m>'parent spat_model'</m></li><li>name (<i>node name</i>):the name of the node. ie.  <m>'name source</m></li><li>instance (<i>instance number</i>): an instance number associated with this node</li><li>mode (<i>combination mode</i>): how the filter will combine with other defined filters. Available modes are:<ul><li>include (<i>default</i>): j.namespace output will include the filter results</li><li>exclude: j.namespace output will exclude filter results</li><li>restrict: j.namespace output will be restricted to filter results</li><li>hamlet: none of the above</li></ul></li></ul>
			</description>
		</method>
		<method name="select">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0"/>
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</method>
		<method name="select/all">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0"/>
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</method>
		<method name="select/none">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0"/>
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</method>
		<method name="selection/refresh">
			<arglist>
				<arg name="ARG_NAME_0" type="list" optional="0"/>
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="address" get="1" set="1" type="symbol" size="1">
			<digest>
				Namespace selection root
			</digest>
			<description>
				The <at>address</at> attribute sets the root of the nodes addresses set the exploration will be performed on. The address may be any node in the namespace, such as the root (/) of the Jamoma namespace (<i>default</i>), a model address or a parameter address for example. 
			</description>
		</attribute>
		<attribute name="depth" get="1" set="1" type="int" size="1">
			<digest>
				Recursive node depth
			</digest>
			<description>
				The <at>depth</at> attribute sets the recursive depth used for the exploration. A depth of 1 will perform the exploration only on the first node under the root defined by the <at>address</at> attribute. A depth of -1 (default) will perform the exploration on all nodes under the root.
			</description>
		</attribute>
		<attribute name="filter/list" get="1" set="1" type="atom" size="1">
			<digest>
				Set the type of addresses to filter
			</digest>
			<description>
				The filter/list attribute sets the type of addresses set to perform filtering on. Possible values are:<br/><br/>
				<ul><li>model</li><li>parameter</li><li>message</li><li>return</li><li>view</li><li>remote</li></ul>
			</description>
		</attribute>
		<attribute name="format" get="1" set="1" type="symbol" size="1">
			<digest>
				Exploration result output format
			</digest>
			<description>
				The <at>format</at> attribute defines how results from the exploration filter will be formatted and output
			</description>
			<attributelist>
				<attribute name="enumvals" get="1" set="1" type="atom" size="5">
					<enumlist>
						<enum name="none">
							<digest>
								Results will be output as a list
							</digest>
							<description>
								Results will be output as a list
							</description>
						</enum>
						<enum name="umenu">
							<digest>
								Results will be itered and formatted to fill a umenu
							</digest>
							<description>
								Results will be itered and formatted to fill a umenu
							</description>
						</enum>
						<enum name="umenu_prefix">
							<digest>
								Results will be itered and formatted to fill a umenu with root added as prefix
							</digest>
							<description>
								Results will be itered and formatted to fill a umenu with root added as prefix
							</description>
						</enum>
						<enum name="jit.cellblock">
							<digest>
								Results will be itered and formatted to fill a jit.cellblock
							</digest>
							<description>
								Results will be itered and formatted to fill a jit.cellblock
							</description>
						</enum>
						<enum name="coll">
							<digest>
								Results will be itered and formatted to fill a coll
							</digest>
							<description>
								Results will be itered and formatted to fill a coll
							</description>
						</enum>
					</enumlist>
				</attribute>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum"/>
			</attributelist>
		</attribute>
		<attribute name="namespace" get="1" set="1" type="symbol" size="1">
			<digest>
				Name of j.namespace instance
			</digest>
			<description>
				The <at>namespace</at> attribute sets a name to this instance of j.namespace. This is required when using j.namespace to perform exploration in combination with other Jamoma object such as <o>j.cue</o>
			</description>
		</attribute>
		<attribute name="output" get="1" set="1" type="symbol" size="1">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				TEXT_HERE
			</description>
			<attributelist>
				<attribute name="enumvals" get="1" set="1" type="atom" size="4">
					<enumlist>
						<enum name="descendants">
							<digest>
								TEXT_HERE
							</digest>
							<description>
								TEXT_HERE
							</description>
						</enum>
						<enum name="children">
							<digest>
								TEXT_HERE
							</digest>
							<description>
								TEXT_HERE
							</description>
						</enum>
						<enum name="brothers">
							<digest>
								TEXT_HERE
							</digest>
							<description>
								TEXT_HERE
							</description>
						</enum>
						<enum name="attributes">
							<digest>
								TEXT_HERE
							</digest>
							<description>
								TEXT_HERE
							</description>
						</enum>
					</enumlist>
				</attribute>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum"/>
			</attributelist>
		</attribute>
		<attribute name="relative" get="1" set="1" type="int" size="1">
			<digest>
				Deprecated
			</digest>
			<description>
				Deprecated
			</description>
			<attributelist>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff"/>
			</attributelist>
		</attribute>
		<attribute name="sort" get="1" set="1" type="symbol" size="1">
			<digest>
				Sort result in alphabetical or priority order
			</digest>
			<description>
				The sort attribute gets results from exploration filter sorted alphabetically (default) or based on their priority value
			</description>
			<attributelist>
				<attribute name="enumvals" get="1" set="1" type="atom" size="2">
					<enumlist>
						<enum name="alphabetic">
							<digest>
								Sort on alphabetical order
							</digest>
							<description>
								Sort on alphabetical order
							</description>
						</enum>
						<enum name="priority">
							<digest>
								Sort on nodes priority
							</digest>
							<description>
								Sort on nodes priority
							</description>
						</enum>
					</enumlist>
				</attribute>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="enum"/>
			</attributelist>
		</attribute>
		<attribute name="update" get="1" set="1" type="int" size="1">
			<digest>
				Listen to updates in Jamoma namespace
			</digest>
			<description>
				The update attribute lets you disable the listening of nodes creation/deletion in Jamoma namespace. When set to off, j.namespace will stop outputing results as changes occur in the namespace. In that case, one must send again the address attribute in order to refresh the namespace exploration result. (default : 1)
			</description>
			<attributelist>
				<attribute name="style" get="1" set="1" type="symbol" size="1" value="onoff"/>
			</attributelist>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example caption="" img=""/>
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="j.cue"/>
		<seealso name="model"/>
		<seealso name="parameter"/>
		<seealso name="message"/>
		<seealso name="return"/>
		<seealso name="absolute_and_relative_address" type="vignette" module="topics"/>
		<seealso name="Build_Max_patches_using_mvc_principles" type="vignette" module="topics"/>
	</seealsolist>
</c74object>
